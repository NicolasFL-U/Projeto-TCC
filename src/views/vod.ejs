<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VOD Review</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/styles_vod.css" rel="stylesheet">

    <script>
        var tag = document.createElement('script');
        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    </script>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg bg-primary">
        <b class="navbar-brand">VOD da Partida <%= vod.id_partida %></b>
        <div class="container justify-content-center">
            <ul class="navbar-nav navbar-centered">
                <li class="nav-item">
                    <a class="nav-link" href="/partidas">Partidas</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/metas">Metas</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/estatisticas">Estatísticas</a>
                </li>
            </ul>
        </div>
        <div class="ml-auto">
            <!-- Botão de configurações -->
            <button type="button" class="btn btn-outline-light" data-toggle="modal" data-target="#configModal">
                <img src="/images/gear-icon.png" alt="Configurações" style="width: 24px; height: 24px;">
            </button>
        </div>
    </nav>

    <div class="main">
        <!-- Corpo principal com vídeo e formulário ao lado -->
        <div class="container-principal">
            <!-- Vídeo da VOD -->
            <div class="video-container">
                <!-- Replace this existing iframe -->
                <!-- <iframe id="vodPlayer" width="850" height="480" src="https://www.youtube.com/embed/<%= vod.link_vod %>" frameborder="0"></iframe> -->

                <!-- With this div -->
                <div id="vodPlayer"></div>

                <!-- Sobreposição de Tags (parte superior) -->
                <div id="tagOverlay" class="overlay tag-overlay"></div>

                <!-- Sobreposição de Comentários (parte inferior) -->
                <div id="comentarioOverlay" class="overlay comentario-overlay"></div>
            </div>
        
            <!-- Formulário dinâmico de TAG/Comentário -->
            <div class="form-container">
                <div class="form-content">
                    <div class="toggle-container">
                        <button id="toggle-tag" class="toggle-button active">TAG</button>
                        <button id="toggle-comment" class="toggle-button">Comentário</button>
                    </div>
            
                    <div id="form-tag" class="form-section active">
                        <form id="tagForm">
                            <div class="form-group">
                                <div class="container-label">
                                    <label for="nomeTag">Nome (até 30 caracteres)</label>
                                    <span id="nomeTagError" class="text-danger" style="visibility: hidden; margin-left: 10px">*Nome inválido</span>
                                </div>
                                <input type="text" class="form-control" id="nomeTag" maxlength="30" placeholder="Digite o nome da TAG">
                            </div>
                    
                            <div class="form-group">
                                <label>Início e Fim</label>
                                <div class="time-inputs">
                                    <input type="number" class="form-control" placeholder="Min" min="0" id="inicioMin" style="width: 45px;">:
                                    <input type="number" class="form-control" placeholder="Seg" min="0" max="59" id="inicioSeg" style="width: 45px;">
                                    <span> - </span>
                                    <input type="number" class="form-control" placeholder="Min" min="0" id="fimMin" style="width: 45px;">:
                                    <input type="number" class="form-control" placeholder="Seg" min="0" max="59" id="fimSeg" style="width: 45px;">
                                </div>
                            </div>
                    
                            <div class="form-group">
                                <label for="corTag">Cor</label>
                                <select id="corTag" class="form-control">
                                    <option value="bd4a4a">Vermelho</option>
                                    <option value="bd844a">Laranja</option>
                                    <option value="ffff4f">Amarelo</option>
                                    <option value="6fff4f">Verde</option>
                                </select>
                            </div>
                    
                            <!-- Botões na parte de baixo, alinhados à direita -->
                            <div class="form-group button-group">
                                <button type="button" id="adicionarTag" class="btn btn-outline-primary">Adicionar</button>
                                <button type="button" id="resetarTag" class="btn btn-outline-secondary">Resetar</button>
                            </div>
                        </form>
                    </div>            
                    <div id="form-comment" class="form-section hidden">
                        <form id="commentForm">
                            <div class="form-group">
                                <div class="container-label">
                                    <label for="comentario">Comentário (até 200 caracteres)</label>
                                    <span id="comentarioError" class="text-danger" style="visibility: hidden; margin-left: 10px">*Comentário inválido</span>
                                </div>
                                <textarea id="comentario" class="form-control" rows="4" maxlength="200" placeholder="Digite seu comentário" style="resize: none;"></textarea>
                            </div>
                    
                            <div class="form-group">
                                <label>Início e Fim</label>
                                <div class="time-inputs">
                                    <input type="number" class="form-control" placeholder="Min" min="0" id="inicioMinComment" style="width: 45px;">:
                                    <input type="number" class="form-control" placeholder="Seg" min="0" max="59" id="inicioSegComment" style="width: 45px;">
                                    <span> - </span>
                                    <input type="number" class="form-control" placeholder="Min" min="0" id="fimMinComment" style="width: 45px;">:
                                    <input type="number" class="form-control" placeholder="Seg" min="0" max="59" id="fimSegComment" style="width: 45px;">
                                </div>
                            </div>
                    
                            <!-- Botões -->
                            <div class="form-group button-group">
                                <button type="button" id="adicionarComentario" class="btn btn-outline-primary">Adicionar</button>
                                <button type="button" id="resetarComentario" class="btn btn-outline-secondary">Resetar</button>
                            </div>
                        </form>
                    </div>
                </div>      
            </div>
        </div>          

        <!-- Lista de timeline abaixo do container-principal -->
        <div id="timeline-container" class="timeline-container" style="visibility: hidden;">
            <div id="timelineContent" class="timeline-content"></div>
        </div>
        
        <div id="timeline-vazia" class="timeline-vazia">
            Insira uma TAG ou um Comentário para poder ver a Timeline!
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Garantir que o formulário de TAG esteja visível e o botão TAG esteja ativo no carregamento
            document.getElementById('form-tag').classList.add('active');
            document.getElementById('toggle-tag').classList.add('active');
            document.getElementById('form-comment').classList.add('hidden');
    
            // Alternar para o formulário de TAG
            document.getElementById('toggle-tag').addEventListener('click', function() {
                document.getElementById('form-tag').classList.remove('hidden');
                document.getElementById('form-tag').classList.add('active');
    
                document.getElementById('form-comment').classList.add('hidden');
                document.getElementById('form-comment').classList.remove('active');
    
                this.classList.add('active');
                document.getElementById('toggle-comment').classList.remove('active');
            });
    
            // Alternar para o formulário de Comentário
            document.getElementById('toggle-comment').addEventListener('click', function() {
                document.getElementById('form-comment').classList.remove('hidden');
                document.getElementById('form-comment').classList.add('active');
    
                document.getElementById('form-tag').classList.add('hidden');
                document.getElementById('form-tag').classList.remove('active');
    
                this.classList.add('active');
                document.getElementById('toggle-tag').classList.remove('active');
            });
        });
    </script>    

    <!-- Modal de Configurações -->
    <div class="modal fade" id="configModal" tabindex="-1" role="dialog" aria-labelledby="configModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="configModalLabel">Configurações da VOD</h5>
                </div>
                <div class="modal-body text-center">
                    <!-- Formulário "invisível" para não afetar o layout -->
                    <form action="/alterarVisibilidadeVod" method="POST" id="vodConfigForm" style="display: none;">
                        <input type="hidden" name="link_vod" value="<%= vod.link_vod %>">
                        <input type="hidden" name="vod_publica" id="vodPublicaHidden">
                    </form>
                    
                    <!-- Acessível para todos com o link toggle -->
                    <div class="form-group d-flex align-items-center justify-content-center" style="margin-top: 15px;">
                        <label for="publicToggle" class="mr-3" style="margin-top: 6px;">Acessível para todos com o link</label>
                        <input type="checkbox" id="publicToggle" class="custom-toggle" <%= vod.vod_publica ? 'checked' : '' %>>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" id="salvarConfigBtn">Salvar</button>
                    <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de erro -->
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="errorModalLabel">Erro</h5>
                </div>
                <div class="modal-body" id="errorMessage">
                    <!-- A mensagem de erro será inserida aqui via JavaScript -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Edição -->
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Editar Item</h5>
                </div>
                <div class="modal-body">
                    <form id="editForm">
                        <input type="hidden" id="editItemId">
                        <div class="form-group">
                            <label for="editNomeTag">Nome</label>
                            <input type="text" class="form-control" id="editNomeTag" placeholder="Nome da Tag/Comentário">
                        </div>
                        <div class="form-group">
                            <label>Início e Fim</label>
                            <div class="time-inputs">
                                <input type="number" class="form-control" placeholder="Min" id="editInicioMin" style="width: 45px;">:
                                <input type="number" class="form-control" placeholder="Seg" id="editInicioSeg" style="width: 45px;">
                                <span> - </span>
                                <input type="number" class="form-control" placeholder="Min" id="editFimMin" style="width: 45px;">:
                                <input type="number" class="form-control" placeholder="Seg" id="editFimSeg" style="width: 45px;">
                            </div>
                        </div>
                        <div class="form-group" id="editCorTagContainer">
                            <label for="editCorTag">Cor</label>
                            <select id="editCorTag" class="form-control">
                                <option value="bd4a4a">Vermelho</option>
                                <option value="bd844a">Laranja</option>
                                <option value="ffff4f">Amarelo</option>
                                <option value="6fff4f">Verde</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="salvarEdicao">Salvar Alterações</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Remoção -->
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirmar Remoção</h5>
                </div>
                <div class="modal-body">
                    <p>Deseja realmente remover a/o tag/comentário "<span id="deleteItemName"></span>"?</p>
                    <input type="hidden" id="deleteItemId">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-danger" id="confirmarRemocao">Remover</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        $(document).ready(function() {
            // Quando o botão "Salvar" for clicado, o formulário invisível será enviado
            $('#salvarConfigBtn').click(function() {
                // Define o valor do campo hidden com base no estado do toggle
                const isPublic = $('#publicToggle').is(':checked') ? 'on' : 'off';
                $('#vodPublicaHidden').val(isPublic);

                // Submete o formulário
                $('#vodConfigForm').submit();
            });
        });
    </script>

    <!-- Script do Socket.io -->
    <script src="/socket.io/socket.io.js"></script>

    <script>
        let player;
    
        // Attach the function to the global window object
        window.onYouTubeIframeAPIReady = function() {
            console.log('API pronta!');
            player = new YT.Player('vodPlayer', {
                videoId: '<%= vod.link_vod %>',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
        }
    
        function onPlayerReady(event) {
            console.log('Player pronto!');
            // Inicia a verificação do tempo a cada 1s quando o player estiver pronto
            setInterval(verificarTempoDoVideo, 1000);
        }
    
        function onPlayerStateChange(event) {
            console.log('Mudança de estado do player');
        }
    
        function verificarTempoDoVideo() {
            const tempoAtual = Math.floor(player.getCurrentTime()); // Tempo atual do vídeo em segundos
            verificarTagsComentarios(tempoAtual); // Chama a função para verificar exibição de tags/comentários
        }
    </script>

    <script>
        function verificarTagsComentarios(tempoAtual) {
            // Verifica se o tempo atual do vídeo está no intervalo de uma tag ou comentário
            const tags = document.querySelectorAll('.tag-item');
            const comentarios = document.querySelectorAll('.comentario-item');

            tags.forEach(tag => {
                const inicio = parseInt(tag.dataset.inicio, 10);
                const fim = parseInt(tag.dataset.fim, 10);
                
                if (tempoAtual >= inicio && tempoAtual <= fim) {
                    tag.style.display = 'block'; // Mostra a tag
                } else {
                    tag.style.display = 'none'; // Esconde a tag
                }
            });

            comentarios.forEach(comentario => {
                const inicio = parseInt(comentario.dataset.inicio, 10);
                const fim = parseInt(comentario.dataset.fim, 10);

                if (tempoAtual >= inicio && tempoAtual <= fim) {
                    comentario.style.display = 'block'; // Mostra o comentário
                } else {
                    comentario.style.display = 'none'; // Esconde o comentário
                }
            });
        }

        function renderizarTags(tags) {
            const tagOverlay = document.getElementById('tagOverlay');
            tagOverlay.innerHTML = ''; // Limpa as tags anteriores
            tags.forEach(tag => {
                const tagElement = document.createElement('div');
                tagElement.textContent = tag.tag;
                tagElement.style.backgroundColor = `rgba(${hexToRgb(tag.cor)}, 0.6)`;
                tagElement.classList.add('tag-item');
                tagElement.classList.add('text-center');
                tagElement.setAttribute('data-inicio', tag.inicio); // Armazena o tempo de início
                tagElement.setAttribute('data-fim', tag.fim); // Armazena o tempo de fim
                tagElement.style.display = 'none'; // Esconde inicialmente
                tagOverlay.appendChild(tagElement);
            });
        }

        function hexToRgb(hex) {
            // Remove o símbolo '#' se existir
            hex = hex.replace('#', '');
            // Converte de 3 dígitos hexadecimais para 6 dígitos
            if (hex.length === 3) {
                hex = hex.split('').map(function (hexDigit) {
                    return hexDigit + hexDigit;
                }).join('');
            }
            const bigint = parseInt(hex, 16);
            const r = (bigint >> 16) & 255;
            const g = (bigint >> 8) & 255;
            const b = bigint & 255;
            return `${r}, ${g}, ${b}`; // Retorna no formato 'r, g, b'
        }

        function renderizarComentarios(comentarios) {
            const comentarioOverlay = document.getElementById('comentarioOverlay');
            comentarioOverlay.innerHTML = ''; // Limpa os comentários anteriores
            comentarios.forEach(comentario => {
                const comentarioElement = document.createElement('div');
                comentarioElement.textContent = comentario.comentario;
                comentarioElement.classList.add('comentario-item');
                comentarioElement.classList.add('text-center');
                comentarioElement.setAttribute('data-inicio', comentario.inicio); // Armazena o tempo de início
                comentarioElement.setAttribute('data-fim', comentario.fim); // Armazena o tempo de fim
                comentarioElement.style.display = 'none'; // Esconde inicialmente
                comentarioOverlay.appendChild(comentarioElement);
            });
        }

        const socket = io(); // Conecta o cliente ao servidor Socket.io
        const linkVod = '<%= vod.link_vod %>'; // ID da VOD
    </script>

    <script src="/js/scripts_vod.js"></script>
</body>
</html>

